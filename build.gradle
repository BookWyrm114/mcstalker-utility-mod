plugins {
	id 'fabric-loom' version '0.10-SNAPSHOT'
	id 'maven-publish'
	id "com.github.johnrengelman.shadow" version "7.1.2"
}

if (new File("localbuild.gradle").exists()) {
	logger.info("Loading local changes...")
	apply from: 'localbuild.gradle'
} else {
	logger.info("No localbuild.gradle file existing; skipping applying local changes")
}
// add your own local dependencies here to test it with other mods

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	mavenCentral()
	maven { url 'https://jitpack.io' }
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	compileOnly "com.google.code.gson:gson:2.8.9"

	implementation "com.squareup.okhttp3:okhttp:4.9.3"
	shadow "com.squareup.okhttp3:okhttp:4.9.3"

	implementation "com.github.Marcono1234:gson-record-type-adapter-factory:0.1.0"
	shadow "com.github.Marcono1234:gson-record-type-adapter-factory:0.1.0"

	implementation "org.json:json:20211205"
	shadow "org.json:json:20211205"

	implementation "com.google.code.findbugs:jsr305:3.0.2"
	shadow "com.google.code.findbugs:jsr305:3.0.2"

	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
}

shadowJar {
	configurations = [project.configurations.shadow]
	dependencies {
		// gson is already included in the fabric-api
		exclude(dependency('com.google.code.gson:gson:.*'))
	}
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand version: project.version
	}
}

remapJar {
	dependsOn shadowJar
	input.set(shadowJar.archiveFile)
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}
