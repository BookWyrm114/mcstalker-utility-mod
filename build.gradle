plugins {
	id 'fabric-loom' version '0.10-SNAPSHOT'
	id 'maven-publish'
	id "com.github.johnrengelman.shadow" version "7.1.2"
}

if (new File("localbuild.gradle").exists()) {
	logger.info("Loading local changes...")
	apply from: 'localbuild.gradle'
} else {
	logger.info("No localbuild.gradle file existing; skipping applying local changes")
}
// add your own local dependencies here to test it with other mods

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	mavenCentral()
	maven { url 'https://jitpack.io' }
}

dependencies {
	def implshadow = { id ->
		implementation id
		shadow id
	}

	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	implshadow "com.google.code.gson:gson:2.8.9"

	implshadow "com.squareup.okhttp3:okhttp:4.9.3"

	implshadow "com.github.Marcono1234:gson-record-type-adapter-factory:0.1.0"

	implshadow "org.json:json:20211205"

	implshadow "com.google.code.findbugs:jsr305:3.0.2"

	implementation("club.minnced:java-discord-rpc:2.0.2") {
		exclude group: "club.minnced", module: "discord-rpc-release"
	}
	shadow("club.minnced:java-discord-rpc:2.0.2") {
		exclude group: "club.minnced", module: "discord-rpc-release"
	}

	// 3.0.4 fails on jitpack
	implshadow "club.minnced:discord-rpc-release:3.3.0"

	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
}

shadowJar {
	configurations = [ project.configurations.shadow ]
	relocate 'club.minnced', 'club.minnced'
	relocate 'com.sun.jna', 'com.sun.jna'
}

// rename the -all jar to -unremapped to avoid confusion
task renameJar(type: Copy) {
	from "build/libs"
	into "build/libs"
	include "*-all.jar"
	rename { filename -> filename.replace("-all", "-unremapped") }
	doLast {
		delete fileTree("build/libs") {
			include "*-all.jar"
		}
	}
}

import com.github.jengelman.gradle.plugins.shadow.tasks.ConfigureShadowRelocation

task relocateShadowJar(type: ConfigureShadowRelocation) {
	target = tasks.shadowJar
	prefix = "${project.group}.${project.archivesBaseName}.shadow"
}

tasks.shadowJar.dependsOn relocateShadowJar
tasks.build.finalizedBy renameJar

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand version: project.version
	}
}

remapJar {
	dependsOn shadowJar
	input.set(shadowJar.archiveFile)
}

java {
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}